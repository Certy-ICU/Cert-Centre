{
  "version": 3,
  "sources": ["../src/index.ts", "../src/polyfills/index.ts", "../src/env.ts", "../../../node_modules/castable-video/castable-video.js", "../../../node_modules/custom-media-element/custom-media-element.js", "../../../node_modules/media-tracks/dist/track-event.js", "../../../node_modules/media-tracks/dist/utils.js", "../../../node_modules/media-tracks/dist/video-track-list.js", "../../../node_modules/media-tracks/dist/rendition-event.js", "../../../node_modules/media-tracks/dist/video-rendition-list.js", "../../../node_modules/media-tracks/dist/video-rendition.js", "../../../node_modules/media-tracks/dist/video-track.js", "../../../node_modules/media-tracks/dist/audio-rendition-list.js", "../../../node_modules/media-tracks/dist/audio-rendition.js", "../../../node_modules/media-tracks/dist/audio-track-list.js", "../../../node_modules/media-tracks/dist/audio-track.js", "../../../node_modules/media-tracks/dist/mixin.js"],
  "sourcesContent": ["import { globalThis } from './polyfills';\nimport {\n  initialize,\n  teardown,\n  generatePlayerInitTime,\n  MuxMediaProps,\n  StreamTypes,\n  PlaybackTypes,\n  toMuxVideoURL,\n  Metadata,\n  MediaError,\n  getError,\n  CmcdTypes,\n  CmcdTypeValues,\n  addCuePoints,\n  getCuePoints,\n  getActiveCuePoint,\n  getStartDate,\n  getCurrentPdt,\n  getStreamType,\n  getTargetLiveWindow,\n  getLiveEdgeStart,\n  getSeekable,\n  getEnded,\n} from '@mux/playback-core';\nimport type {\n  PlaybackCore,\n  PlaybackEngine,\n  Autoplay,\n  MediaTracks,\n  ExtensionMimeTypeMap,\n  ValueOf,\n} from '@mux/playback-core';\nimport { getPlayerVersion } from './env';\n// this must be imported after playback-core for the polyfill to be included\nimport 'castable-video';\nimport { CustomMediaMixin, Events as VideoEvents } from 'custom-media-element';\nimport { MediaTracksMixin } from 'media-tracks';\n\n// Must mutate so the added events are available in custom-media-element.\nVideoEvents.push('castchange', 'entercast', 'leavecast');\n\nconst CustomVideoElement = MediaTracksMixin(\n  CustomMediaMixin(globalThis.HTMLElement, {\n    tag: 'video',\n    is: 'castable-video',\n  })\n);\n\n/** @TODO make the relationship between name+value smarter and more deriveable (CJP) */\ntype AttributeNames = {\n  BEACON_COLLECTION_DOMAIN: 'beacon-collection-domain';\n  CUSTOM_DOMAIN: 'custom-domain';\n  DEBUG: 'debug';\n  DISABLE_COOKIES: 'disable-cookies';\n  ENV_KEY: 'env-key';\n  MAX_RESOLUTION: 'max-resolution';\n  METADATA_URL: 'metadata-url';\n  PLAYBACK_ID: 'playback-id';\n  PLAYER_SOFTWARE_NAME: 'player-software-name';\n  PLAYER_SOFTWARE_VERSION: 'player-software-version';\n  PREFER_CMCD: 'prefer-cmcd';\n  PREFER_PLAYBACK: 'prefer-playback';\n  START_TIME: 'start-time';\n  STREAM_TYPE: 'stream-type';\n  TARGET_LIVE_WINDOW: 'target-live-window';\n  LIVE_EDGE_OFFSET: 'live-edge-offset';\n  TYPE: 'type';\n};\n\nexport const Attributes: AttributeNames = {\n  BEACON_COLLECTION_DOMAIN: 'beacon-collection-domain',\n  CUSTOM_DOMAIN: 'custom-domain',\n  DEBUG: 'debug',\n  DISABLE_COOKIES: 'disable-cookies',\n  ENV_KEY: 'env-key',\n  MAX_RESOLUTION: 'max-resolution',\n  METADATA_URL: 'metadata-url',\n  PLAYBACK_ID: 'playback-id',\n  PLAYER_SOFTWARE_NAME: 'player-software-name',\n  PLAYER_SOFTWARE_VERSION: 'player-software-version',\n  PREFER_CMCD: 'prefer-cmcd',\n  PREFER_PLAYBACK: 'prefer-playback',\n  START_TIME: 'start-time',\n  STREAM_TYPE: 'stream-type',\n  TARGET_LIVE_WINDOW: 'target-live-window',\n  LIVE_EDGE_OFFSET: 'live-edge-offset',\n  TYPE: 'type',\n};\n\nconst AttributeNameValues = Object.values(Attributes);\n\nconst playerSoftwareVersion = getPlayerVersion();\nconst playerSoftwareName = 'mux-video';\n\nclass MuxVideoElement extends CustomVideoElement implements Partial<MuxMediaProps> {\n  static get observedAttributes() {\n    return [...AttributeNameValues, ...(CustomVideoElement.observedAttributes ?? [])];\n  }\n\n  #core?: PlaybackCore;\n  #loadRequested?: Promise<void> | null;\n  #playerInitTime: number;\n  #metadata: Readonly<Metadata> = {};\n  #playerSoftwareVersion?: string;\n  #playerSoftwareName?: string;\n  #errorTranslator?: (errorEvent: any) => any;\n\n  constructor() {\n    super();\n    this.#playerInitTime = generatePlayerInitTime();\n  }\n\n  get preferCmcd() {\n    return (this.getAttribute(Attributes.PREFER_CMCD) as ValueOf<CmcdTypes>) ?? undefined;\n  }\n\n  set preferCmcd(value: ValueOf<CmcdTypes> | undefined) {\n    if (value === this.preferCmcd) return;\n    if (!value) {\n      this.removeAttribute(Attributes.PREFER_CMCD);\n    } else if (CmcdTypeValues.includes(value)) {\n      this.setAttribute(Attributes.PREFER_CMCD, value);\n    } else {\n      console.warn(`Invalid value for preferCmcd. Must be one of ${CmcdTypeValues.join()}`);\n    }\n  }\n\n  get playerInitTime() {\n    return this.#playerInitTime;\n  }\n\n  get playerSoftwareName() {\n    return this.#playerSoftwareName ?? playerSoftwareName;\n  }\n\n  set playerSoftwareName(value: string | undefined) {\n    this.#playerSoftwareName = value;\n  }\n\n  get playerSoftwareVersion() {\n    return this.#playerSoftwareVersion ?? playerSoftwareVersion;\n  }\n\n  set playerSoftwareVersion(value: string | undefined) {\n    this.#playerSoftwareVersion = value;\n  }\n\n  // Keeping this named \"_hls\" since it's exposed for unadvertised \"advanced usage\" via getter that assumes specifically hls.js (CJP)\n  get _hls(): PlaybackEngine | undefined {\n    return this.#core?.engine;\n  }\n\n  get mux(): Readonly<HTMLVideoElement['mux']> | undefined {\n    return this.nativeEl?.mux;\n  }\n\n  get error() {\n    return getError(this.nativeEl) ?? null;\n  }\n\n  get errorTranslator(): ((errorEvent: any) => any) | undefined {\n    return this.#errorTranslator;\n  }\n\n  set errorTranslator(value: ((errorEvent: any) => any) | undefined) {\n    this.#errorTranslator = value;\n  }\n\n  get src() {\n    // Use the attribute value as the source of truth.\n    // No need to store it in two places.\n    // This avoids needing a to read the attribute initially and update the src.\n    return this.getAttribute('src') as string;\n  }\n\n  set src(val: string) {\n    // If being set by attributeChangedCallback,\n    // dont' cause an infinite loop\n    if (val === this.src) return;\n\n    if (val == null) {\n      this.removeAttribute('src');\n    } else {\n      this.setAttribute('src', val);\n    }\n  }\n\n  get type(): ValueOf<ExtensionMimeTypeMap> | undefined {\n    return (this.getAttribute(Attributes.TYPE) as ValueOf<ExtensionMimeTypeMap>) ?? undefined;\n  }\n\n  set type(val: ValueOf<ExtensionMimeTypeMap> | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.type) return;\n\n    if (val) {\n      this.setAttribute(Attributes.TYPE, val);\n    } else {\n      this.removeAttribute(Attributes.TYPE);\n    }\n  }\n\n  /** @ts-ignore */\n  get autoplay(): Autoplay {\n    const attr = this.getAttribute('autoplay');\n\n    if (attr === null) {\n      return false;\n    } else if (attr === '') {\n      return true;\n    } else {\n      return attr as Autoplay;\n    }\n  }\n\n  /** @ts-ignore */\n  set autoplay(val: Autoplay) {\n    const currentVal = this.autoplay;\n    if (val === currentVal) {\n      return;\n    }\n\n    if (val) {\n      this.setAttribute('autoplay', typeof val === 'string' ? val : '');\n    } else {\n      this.removeAttribute('autoplay');\n    }\n  }\n\n  get preload() {\n    const val = this.getAttribute('preload') as HTMLMediaElement['preload'];\n    if (val === '') return 'auto';\n    if (['none', 'metadata', 'auto'].includes(val)) return val;\n    return super.preload;\n  }\n\n  set preload(val) {\n    // don't cause an infinite loop\n    // check the attribute because an empty string maps to the `auto` prop\n    if (val == this.getAttribute('preload')) return;\n\n    if (['', 'none', 'metadata', 'auto'].includes(val)) {\n      this.setAttribute('preload', val);\n    } else {\n      this.removeAttribute('preload');\n    }\n  }\n\n  get debug(): boolean {\n    return this.getAttribute(Attributes.DEBUG) != null;\n  }\n\n  set debug(val: boolean) {\n    // dont' cause an infinite loop\n    if (val === this.debug) return;\n\n    if (val) {\n      this.setAttribute(Attributes.DEBUG, '');\n    } else {\n      this.removeAttribute(Attributes.DEBUG);\n    }\n  }\n\n  get disableCookies(): boolean {\n    return this.hasAttribute(Attributes.DISABLE_COOKIES);\n  }\n\n  set disableCookies(val: boolean) {\n    // dont' cause an infinite loop\n    if (val === this.disableCookies) return;\n\n    if (val) {\n      this.setAttribute(Attributes.DISABLE_COOKIES, '');\n    } else {\n      this.removeAttribute(Attributes.DISABLE_COOKIES);\n    }\n  }\n\n  get startTime(): number | undefined {\n    const val = this.getAttribute(Attributes.START_TIME);\n    if (val == null) return undefined;\n    const num = +val;\n    return !Number.isNaN(num) ? num : undefined;\n  }\n\n  set startTime(val: number | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.startTime) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.START_TIME);\n    } else {\n      this.setAttribute(Attributes.START_TIME, `${val}`);\n    }\n  }\n\n  get playbackId(): string | undefined {\n    return this.getAttribute(Attributes.PLAYBACK_ID) ?? undefined;\n  }\n\n  set playbackId(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.playbackId) return;\n\n    if (val) {\n      this.setAttribute(Attributes.PLAYBACK_ID, val);\n    } else {\n      this.removeAttribute(Attributes.PLAYBACK_ID);\n    }\n  }\n\n  get maxResolution() {\n    return this.getAttribute(Attributes.MAX_RESOLUTION) ?? undefined;\n  }\n\n  set maxResolution(val: string | undefined) {\n    if (val === this.maxResolution) return;\n\n    if (val) {\n      this.setAttribute(Attributes.MAX_RESOLUTION, val);\n    } else {\n      this.removeAttribute(Attributes.MAX_RESOLUTION);\n    }\n  }\n\n  get customDomain() {\n    return this.getAttribute(Attributes.CUSTOM_DOMAIN) ?? undefined;\n  }\n\n  set customDomain(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.customDomain) return;\n\n    if (val) {\n      this.setAttribute(Attributes.CUSTOM_DOMAIN, val);\n    } else {\n      this.removeAttribute(Attributes.CUSTOM_DOMAIN);\n    }\n  }\n\n  get ended() {\n    // This ensures that edge case media that doesn't properly end will\n    // still announce itself as \"ended\".\n    return getEnded(this.nativeEl, this._hls);\n  }\n\n  get envKey(): string | undefined {\n    return this.getAttribute(Attributes.ENV_KEY) ?? undefined;\n  }\n\n  set envKey(val: string | undefined) {\n    // dont' cause an infinite loop\n    if (val === this.envKey) return;\n\n    if (val) {\n      this.setAttribute(Attributes.ENV_KEY, val);\n    } else {\n      this.removeAttribute(Attributes.ENV_KEY);\n    }\n  }\n\n  get beaconCollectionDomain(): string | undefined {\n    return this.getAttribute(Attributes.BEACON_COLLECTION_DOMAIN) ?? undefined;\n  }\n\n  set beaconCollectionDomain(val: string | undefined) {\n    // don't cause an infinite loop\n    if (val === this.beaconCollectionDomain) return;\n\n    if (val) {\n      this.setAttribute(Attributes.BEACON_COLLECTION_DOMAIN, val);\n    } else {\n      this.removeAttribute(Attributes.BEACON_COLLECTION_DOMAIN);\n    }\n  }\n\n  get streamType(): ValueOf<StreamTypes> | undefined {\n    // Allow overriding inferred `streamType`\n    return (this.getAttribute(Attributes.STREAM_TYPE) as ValueOf<StreamTypes>) ?? getStreamType(this.nativeEl);\n  }\n\n  set streamType(val: ValueOf<StreamTypes> | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val === this.streamType) return;\n\n    if (val) {\n      this.setAttribute(Attributes.STREAM_TYPE, val);\n    } else {\n      this.removeAttribute(Attributes.STREAM_TYPE);\n    }\n  }\n\n  get targetLiveWindow() {\n    // Allow overriding inferred `targetLiveWindow`\n    if (this.hasAttribute(Attributes.TARGET_LIVE_WINDOW)) {\n      return +(this.getAttribute(Attributes.TARGET_LIVE_WINDOW) as string) as number;\n    }\n    return getTargetLiveWindow(this.nativeEl);\n  }\n\n  set targetLiveWindow(val: number | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val == this.targetLiveWindow) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.TARGET_LIVE_WINDOW);\n    } else {\n      this.setAttribute(Attributes.TARGET_LIVE_WINDOW, `${+val}`);\n    }\n  }\n\n  get liveEdgeStart() {\n    if (this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)) {\n      const { liveEdgeOffset } = this;\n      const seekableEnd = this.nativeEl.seekable.end(0) ?? 0;\n      const seekableStart = this.nativeEl.seekable.start(0) ?? 0;\n      return Math.max(seekableStart, seekableEnd - (liveEdgeOffset as number));\n    }\n    return getLiveEdgeStart(this.nativeEl);\n  }\n\n  get liveEdgeOffset() {\n    if (!this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)) return undefined;\n    return +(this.getAttribute(Attributes.LIVE_EDGE_OFFSET) as string) as number;\n  }\n\n  set liveEdgeOffset(val: number | undefined) {\n    // don't cause an infinite loop and avoid change event dispatching\n    if (val == this.targetLiveWindow) return;\n\n    if (val == null) {\n      this.removeAttribute(Attributes.LIVE_EDGE_OFFSET);\n    } else {\n      this.setAttribute(Attributes.LIVE_EDGE_OFFSET, `${+val}`);\n    }\n  }\n\n  get seekable() {\n    return getSeekable(this.nativeEl);\n  }\n\n  async addCuePoints<T = any>(cuePoints: { time: number; value: T }[]) {\n    return addCuePoints(this.nativeEl, cuePoints);\n  }\n\n  get activeCuePoint() {\n    return getActiveCuePoint(this.nativeEl);\n  }\n\n  get cuePoints() {\n    return getCuePoints(this.nativeEl);\n  }\n\n  getStartDate() {\n    return getStartDate(this.nativeEl, this._hls);\n  }\n\n  get currentPdt() {\n    return getCurrentPdt(this.nativeEl, this._hls);\n  }\n\n  get preferPlayback(): ValueOf<PlaybackTypes> | undefined {\n    const val = this.getAttribute(Attributes.PREFER_PLAYBACK);\n    if (val === PlaybackTypes.MSE || val === PlaybackTypes.NATIVE) return val;\n    return undefined;\n  }\n\n  set preferPlayback(val: ValueOf<PlaybackTypes> | undefined) {\n    if (val === this.preferPlayback) return;\n\n    if (val === PlaybackTypes.MSE || val === PlaybackTypes.NATIVE) {\n      this.setAttribute(Attributes.PREFER_PLAYBACK, val);\n    } else {\n      this.removeAttribute(Attributes.PREFER_PLAYBACK);\n    }\n  }\n\n  get metadata() {\n    const inferredMetadataAttrs: { [key: string]: string } = this.getAttributeNames()\n      .filter((attrName) => {\n        return attrName.startsWith('metadata-') && !([Attributes.METADATA_URL] as string[]).includes(attrName);\n      })\n      .reduce((currAttrs, attrName) => {\n        const value = this.getAttribute(attrName);\n        if (value != null) {\n          currAttrs[attrName.replace(/^metadata-/, '').replace(/-/g, '_') as string] = value;\n        }\n        return currAttrs;\n      }, {} as { [key: string]: string });\n\n    return {\n      ...inferredMetadataAttrs,\n      ...this.#metadata,\n    };\n  }\n\n  set metadata(val: Readonly<Metadata> | undefined) {\n    this.#metadata = val ?? {};\n    if (!!this.mux) {\n      this.mux.emit('hb', this.#metadata);\n    }\n  }\n\n  async #requestLoad() {\n    if (this.#loadRequested) return;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.load();\n  }\n\n  load() {\n    this.#core = initialize(this as Partial<MuxMediaProps> & MediaTracks, this.nativeEl, this.#core);\n  }\n\n  unload() {\n    teardown(this.nativeEl, this.#core);\n    this.#core = undefined;\n  }\n\n  attributeChangedCallback(attrName: string, oldValue: string | null, newValue: string | null) {\n    // Only forward the attributes to the native media element that are not handled.\n    const isNativeAttr = CustomVideoElement.observedAttributes.includes(attrName);\n    if (isNativeAttr && !['src', 'autoplay', 'preload'].includes(attrName)) {\n      super.attributeChangedCallback(attrName, oldValue, newValue);\n    }\n\n    switch (attrName) {\n      case Attributes.PLAYER_SOFTWARE_NAME:\n        this.playerSoftwareName = newValue ?? undefined;\n        break;\n      case Attributes.PLAYER_SOFTWARE_VERSION:\n        this.playerSoftwareVersion = newValue ?? undefined;\n        break;\n      case 'src': {\n        const hadSrc = !!oldValue;\n        const hasSrc = !!newValue;\n        if (!hadSrc && hasSrc) {\n          this.#requestLoad();\n        } else if (hadSrc && !hasSrc) {\n          this.unload();\n        } else if (hadSrc && hasSrc) {\n          this.unload();\n          this.#requestLoad();\n        }\n        break;\n      }\n      case 'autoplay':\n        if (newValue === oldValue) {\n          break;\n        }\n        /** In case newValue is an empty string or null, use this.autoplay which translates to booleans (WL) */\n        this.#core?.setAutoplay(this.autoplay);\n        break;\n      case 'preload':\n        if (newValue === oldValue) {\n          break;\n        }\n        this.#core?.setPreload(newValue as HTMLMediaElement['preload']);\n        break;\n      case Attributes.PLAYBACK_ID:\n        this.src = toMuxVideoURL(newValue ?? undefined, {\n          maxResolution: this.maxResolution,\n          domain: this.customDomain,\n        }) as string;\n        break;\n      case Attributes.DEBUG: {\n        const debug = this.debug;\n        if (!!this.mux) {\n          /** @TODO Link to docs for a more detailed discussion (CJP) */\n          console.info(\n            'Cannot toggle debug mode of mux data after initialization. Make sure you set all metadata to override before setting the src.'\n          );\n        }\n        if (!!this._hls) {\n          this._hls.config.debug = debug;\n        }\n        break;\n      }\n      case Attributes.METADATA_URL:\n        if (newValue) {\n          fetch(newValue)\n            .then((resp) => resp.json())\n            .then((json) => (this.metadata = json))\n            .catch(() => console.error(`Unable to load or parse metadata JSON from metadata-url ${newValue}!`));\n        }\n        break;\n      case Attributes.STREAM_TYPE:\n        // If the newValue is unset\n        if (newValue == null || newValue !== oldValue) {\n          this.dispatchEvent(new CustomEvent('streamtypechange', { composed: true, bubbles: true }));\n        }\n        break;\n      case Attributes.TARGET_LIVE_WINDOW:\n        if (newValue == null || newValue !== oldValue) {\n          this.dispatchEvent(\n            new CustomEvent('targetlivewindowchange', { composed: true, bubbles: true, detail: this.targetLiveWindow })\n          );\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback?.();\n    if (this.nativeEl && this.src && !this.#core) {\n      this.#requestLoad();\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.unload();\n  }\n}\n\ntype MuxVideoElementType = typeof MuxVideoElement;\ndeclare global {\n  var MuxVideoElement: MuxVideoElementType; // eslint-disable-line\n}\n\nif (!globalThis.customElements.get('mux-video')) {\n  globalThis.customElements.define('mux-video', MuxVideoElement);\n  globalThis.MuxVideoElement = MuxVideoElement;\n}\n\nexport { PlaybackEngine, PlaybackEngine as Hls, ExtensionMimeTypeMap as MimeTypes, MediaError, VideoEvents };\n\nexport default MuxVideoElement;\n", "/* eslint @typescript-eslint/no-empty-function: \"off\", @typescript-eslint/no-unused-vars: \"off\" */\n\nclass EventTarget {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent(_event: Event) {\n    return true;\n  }\n}\n\n// @github/template-parts requires DocumentFragment to be available on globalThis for SSR\nif (typeof DocumentFragment === 'undefined') {\n  class DocumentFragment extends EventTarget {}\n  // @ts-ignore\n  globalThis.DocumentFragment = DocumentFragment;\n}\n\nclass HTMLElement extends EventTarget {}\nclass HTMLVideoElement extends EventTarget {}\n\nconst customElements: CustomElementRegistry = {\n  get(_name: string) {\n    return undefined;\n  },\n  define(_name, _constructor, _options) {},\n  upgrade(_root) {},\n  whenDefined(_name) {\n    return Promise.resolve(HTMLElement as unknown as CustomElementConstructor);\n  },\n};\n\nclass CustomEvent {\n  #detail;\n  get detail() {\n    return this.#detail;\n  }\n  constructor(typeArg: string, eventInitDict: CustomEventInit = {}) {\n    // super(typeArg, eventInitDict);\n    this.#detail = eventInitDict?.detail;\n  }\n  initCustomEvent() {}\n}\n\nfunction createElement(_tagName: string, _options?: ElementCreationOptions): HTMLElement {\n  return new HTMLElement();\n}\n\nconst globalThisShim = {\n  document: {\n    createElement,\n  },\n  DocumentFragment,\n  customElements,\n  CustomEvent,\n  EventTarget,\n  HTMLElement,\n  HTMLVideoElement,\n};\n\n// const isServer = typeof window === 'undefined' || typeof globalThis.customElements === 'undefined';\n// const GlobalThis = isServer ? globalThisShim : globalThis;\n// const Document = isServer ? globalThisShim.document : globalThis.document;\n//\n// export { GlobalThis as globalThis, Document as document };\nconst isServer = typeof window === 'undefined' || typeof globalThis.customElements === 'undefined';\ntype GlobalThis = typeof globalThis;\nconst internalGlobalThis: GlobalThis = (isServer ? globalThisShim : globalThis) as GlobalThis;\nconst internalDocument: Document = (isServer ? globalThisShim.document : globalThis.document) as Document;\n\nexport { internalGlobalThis as globalThis, internalDocument as document };\n", "export const isMaybeBrowser = () => typeof window != 'undefined';\n// @ts-ignore\nexport const isMaybeServer = () => typeof global != 'undefined';\n\nconst getEnvPlayerVersion = () => {\n  try {\n    // @ts-ignore\n    return PLAYER_VERSION as string;\n  } catch {}\n  return 'UNKNOWN';\n};\n\nconst player_version: string = getEnvPlayerVersion();\n\nexport const getPlayerVersion = () => player_version;\n", "/* global globalThis, chrome, cast */\n\n/**\n * CastableVideoMixin\n *\n * Because there can only be one custom built-in (is=\"my-video\") this mixin function\n * provides a way to compose multiple classes to create one custom built-in class.\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n *\n * @param  {HTMLVideoElement} superclass - HTMLVideoElement or an extended class of it.\n * @return {CastableVideo}\n */\nexport const CastableVideoMixin = (superclass) =>\n  class CastableVideo extends superclass {\n    static observedAttributes = [\n      'cast-src',\n      'cast-content-type',\n      'cast-stream-type',\n    ];\n    static instances = new Set();\n\n    static #castElement;\n    static get castElement() {\n      return CastableVideo.#castElement;\n    }\n\n    static #castEnabled = false;\n    static get castEnabled() {\n      return CastableVideo.#castEnabled;\n    }\n\n    static get castState() {\n      return CastableVideo.#castContext?.getCastState();\n    }\n\n    static async exitCast() {\n      // Should the receiver application be stopped or just disconnected.\n      const stopCasting = true;\n      try {\n        await CastableVideo.#castContext.endCurrentSession(stopCasting);\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n\n    static initCast = () => {\n      if (!this.#isChromeCastAvailable) {\n        globalThis.__onGCastApiAvailable = () => {\n          // The globalThis.__onGCastApiAvailable callback alone is not reliable for\n          // the added cast.framework. It's loaded in a separate JS file.\n          // http://www.gstatic.com/eureka/clank/101/cast_sender.js\n          // http://www.gstatic.com/cast/sdk/libs/sender/1.0/cast_framework.js\n          customElements\n            .whenDefined('google-cast-button')\n            .then(() => this.#onSdkLoaded(chrome.cast.isAvailable));\n        };\n      } else if (!this.#isCastFrameworkAvailable) {\n        customElements\n          .whenDefined('google-cast-button')\n          .then(() => this.#onSdkLoaded(chrome.cast.isAvailable));\n      } else {\n        this.#onSdkLoaded(chrome.cast.isAvailable);\n      }\n    };\n\n    static #onSdkLoaded = (isAvailable) => {\n      if (isAvailable) {\n        this.#castEnabled = true;\n\n        const { CAST_STATE_CHANGED } = cast.framework.CastContextEventType;\n        CastableVideo.#castContext.addEventListener(CAST_STATE_CHANGED, (e) => {\n          this.instances.forEach((video) => video.#onCastStateChanged(e));\n        });\n\n        const { SESSION_STATE_CHANGED } = cast.framework.CastContextEventType;\n        CastableVideo.#castContext.addEventListener(\n          SESSION_STATE_CHANGED,\n          (e) => {\n            this.instances.forEach((video) => video.#onSessionStateChanged(e));\n          }\n        );\n\n        this.instances.forEach((video) => video.#init());\n      }\n    };\n\n    static get #isChromeCastAvailable() {\n      return (\n        typeof chrome !== 'undefined' && chrome.cast && chrome.cast.isAvailable\n      );\n    }\n\n    static get #isCastFrameworkAvailable() {\n      return typeof cast !== 'undefined' && cast.framework;\n    }\n\n    static get #castContext() {\n      if (CastableVideo.#isCastFrameworkAvailable) {\n        return cast.framework.CastContext.getInstance();\n      }\n      return undefined;\n    }\n\n    static get #currentSession() {\n      return CastableVideo.#castContext?.getCurrentSession();\n    }\n\n    static get #currentMedia() {\n      return CastableVideo.#currentSession?.getSessionObj().media[0];\n    }\n\n    static #editTracksInfo(request) {\n      return new Promise((resolve, reject) => {\n        CastableVideo.#currentMedia.editTracksInfo(request, resolve, reject);\n      });\n    }\n\n    static #getMediaStatus(request) {\n      return new Promise((resolve, reject) => {\n        CastableVideo.#currentMedia.getStatus(request, resolve, reject);\n      });\n    }\n\n    static #setOptions(options) {\n      return CastableVideo.#castContext.setOptions({\n        // Set the receiver application ID to your own (created in the\n        // Google Cast Developer Console), or optionally\n        // use the chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID\n        receiverApplicationId: chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,\n\n        // Auto join policy can be one of the following three:\n        // ORIGIN_SCOPED - Auto connect from same appId and page origin\n        // TAB_AND_ORIGIN_SCOPED - Auto connect from same appId, page origin, and tab\n        // PAGE_SCOPED - No auto connect\n        autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n\n        // The following flag enables Cast Connect(requires Chrome 87 or higher)\n        // https://developers.googleblog.com/2020/08/introducing-cast-connect-android-tv.html\n        androidReceiverCompatible: false,\n\n        language: 'en-US',\n        resumeSavedSession: true,\n\n        ...options,\n      });\n    }\n\n    castEnabled = false;\n    #localState = { paused: false };\n    #remotePlayer;\n    #remoteListeners = {};\n    #enterCastCallback;\n    #leaveCastCallback;\n    #castChangeCallback;\n\n    constructor() {\n      super();\n\n      CastableVideo.instances.add(this);\n      this.#init();\n    }\n\n    get castPlayer() {\n      if (CastableVideo.castElement === this) return this.#remotePlayer;\n      return undefined;\n    }\n\n    get #isMediaLoaded() {\n      return this.castPlayer?.isMediaLoaded;\n    }\n\n    attributeChangedCallback(attrName) {\n      if (!this.castPlayer) return;\n\n      switch (attrName) {\n        case 'cast-stream-type':\n        case 'cast-src':\n          this.load();\n          break;\n      }\n    }\n\n    #disconnect() {\n      if (CastableVideo.#castElement !== this) return;\n\n      Object.entries(this.#remoteListeners).forEach(([event, listener]) => {\n        this.#remotePlayer.controller.removeEventListener(event, listener);\n      });\n\n      CastableVideo.#castElement = undefined;\n\n      // isMuted is not in savedPlayerState. should we sync this back to local?\n      this.muted = this.#remotePlayer.isMuted;\n      this.currentTime = this.#remotePlayer.savedPlayerState.currentTime;\n      if (this.#remotePlayer.savedPlayerState.isPaused === false) {\n        this.play();\n      }\n    }\n\n    #onCastStateChanged() {\n      // Cast state: NO_DEVICES_AVAILABLE, NOT_CONNECTED, CONNECTING, CONNECTED\n      // https://developers.google.com/cast/docs/reference/web_sender/cast.framework#.CastState\n      this.dispatchEvent(\n        new CustomEvent('castchange', {\n          detail: CastableVideo.#castContext.getCastState(),\n        })\n      );\n    }\n\n    async #onSessionStateChanged() {\n      // Session states: NO_SESSION, SESSION_STARTING, SESSION_STARTED, SESSION_START_FAILED,\n      //                 SESSION_ENDING, SESSION_ENDED, SESSION_RESUMED\n      // https://developers.google.com/cast/docs/reference/web_sender/cast.framework#.SessionState\n\n      const { SESSION_RESUMED } = cast.framework.SessionState;\n      if (CastableVideo.#castContext.getSessionState() === SESSION_RESUMED) {\n        /**\n         * Figure out if this was the video that started the resumed session.\n         * @TODO make this more specific than just checking against the video src!! (WL)\n         *\n         * If this video element can get the same unique id on each browser refresh\n         * it would be possible to pass this unique id w/ `LoadRequest.customData`\n         * and verify against CastableVideo.#currentMedia.customData below.\n         */\n        if (this.castSrc === CastableVideo.#currentMedia?.media.contentId) {\n          CastableVideo.#castElement = this;\n\n          Object.entries(this.#remoteListeners).forEach(([event, listener]) => {\n            this.#remotePlayer.controller.addEventListener(event, listener);\n          });\n\n          /**\n           * There is cast framework resume session bug when you refresh the page a few\n           * times the this.#remotePlayer.currentTime will not be in sync with the receiver :(\n           * The below status request syncs it back up.\n           */\n          try {\n            await CastableVideo.#getMediaStatus(\n              new chrome.cast.media.GetStatusRequest()\n            );\n          } catch (error) {\n            console.error(error);\n          }\n\n          // Dispatch the play, playing events manually to sync remote playing state.\n          this.#remoteListeners[\n            cast.framework.RemotePlayerEventType.IS_PAUSED_CHANGED\n          ]();\n          this.#remoteListeners[\n            cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED\n          ]();\n        }\n      }\n    }\n\n    #init() {\n      if (!CastableVideo.#isCastFrameworkAvailable || this.castEnabled) return;\n      this.castEnabled = true;\n      CastableVideo.#setOptions();\n\n      /**\n       * @TODO add listeners for addtrack, removetrack (WL)\n       * This only has an impact on <track> with a `src` because these have to be\n       * loaded manually in the load() method. This will require a new load() call\n       * for each added/removed track w/ src.\n       */\n      this.textTracks.addEventListener(\n        'change',\n        this.#updateRemoteTextTrack.bind(this)\n      );\n\n      this.#onCastStateChanged();\n\n      this.#remotePlayer = new cast.framework.RemotePlayer();\n      new cast.framework.RemotePlayerController(this.#remotePlayer);\n\n      this.#remoteListeners = {\n        [cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED]: ({\n          value,\n        }) => {\n          if (value === false) {\n            this.#disconnect();\n          }\n          this.dispatchEvent(new Event(value ? 'entercast' : 'leavecast'));\n        },\n        [cast.framework.RemotePlayerEventType.DURATION_CHANGED]: () => {\n          this.dispatchEvent(new Event('durationchange'));\n        },\n        [cast.framework.RemotePlayerEventType.VOLUME_LEVEL_CHANGED]: () => {\n          this.dispatchEvent(new Event('volumechange'));\n        },\n        [cast.framework.RemotePlayerEventType.IS_MUTED_CHANGED]: () => {\n          this.dispatchEvent(new Event('volumechange'));\n        },\n        [cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED]: () => {\n          if (!this.#isMediaLoaded) return;\n          this.dispatchEvent(new Event('timeupdate'));\n        },\n        [cast.framework.RemotePlayerEventType.VIDEO_INFO_CHANGED]: () => {\n          this.dispatchEvent(new Event('resize'));\n        },\n        [cast.framework.RemotePlayerEventType.IS_PAUSED_CHANGED]: () => {\n          this.dispatchEvent(new Event(this.paused ? 'pause' : 'play'));\n        },\n        [cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED]: () => {\n          // Player states: IDLE, PLAYING, PAUSED, BUFFERING\n          // https://developers.google.com/cast/docs/reference/web_sender/chrome.cast.media#.PlayerState\n\n          // pause event is handled above.\n          if (\n            this.castPlayer?.playerState ===\n            chrome.cast.media.PlayerState.PAUSED\n          ) {\n            return;\n          }\n          this.dispatchEvent(\n            new Event(\n              {\n                [chrome.cast.media.PlayerState.PLAYING]: 'playing',\n                [chrome.cast.media.PlayerState.BUFFERING]: 'waiting',\n                [chrome.cast.media.PlayerState.IDLE]: 'emptied',\n              }[this.castPlayer?.playerState]\n            )\n          );\n        },\n        [cast.framework.RemotePlayerEventType.IS_MEDIA_LOADED_CHANGED]:\n          async () => {\n            if (!this.#isMediaLoaded) return;\n\n            // mediaInfo is not immediately available due to a bug? wait one tick\n            await Promise.resolve();\n            this.#onRemoteMediaLoaded();\n          },\n      };\n    }\n\n    async requestCast(options = {}) {\n      CastableVideo.#setOptions(options);\n      CastableVideo.#castElement = this;\n\n      Object.entries(this.#remoteListeners).forEach(([event, listener]) => {\n        this.#remotePlayer.controller.addEventListener(event, listener);\n      });\n\n      try {\n        // Open browser cast menu.\n        await CastableVideo.#castContext.requestSession();\n      } catch (err) {\n        CastableVideo.#castElement = undefined;\n        // console.error(err); // Don't show an error if dismissing the menu.\n        return;\n      }\n\n      // Pause locally when the session is created.\n      this.#localState.paused = super.paused;\n      super.pause();\n\n      // Sync over the muted state but not volume, 100% is different on TV's :P\n      this.muted = super.muted;\n\n      try {\n        await this.load();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    async load() {\n      if (!this.castPlayer) return super.load();\n\n      const mediaInfo = new chrome.cast.media.MediaInfo(\n        this.castSrc,\n        this.castContentType\n      );\n\n      // Manually add text tracks with a `src` attribute.\n      // M3U8's load text tracks in the receiver, handle these in the media loaded event.\n      const subtitles = [...this.querySelectorAll('track')].filter(\n        ({ kind, src }) => {\n          return src && (kind === 'subtitles' || kind === 'captions');\n        }\n      );\n\n      const activeTrackIds = [];\n      let textTrackIdCount = 0;\n\n      if (subtitles.length) {\n        mediaInfo.tracks = subtitles.map((trackEl) => {\n          const trackId = ++textTrackIdCount;\n          // only activate 1 subtitle text track.\n          if (activeTrackIds.length === 0 && trackEl.track.mode === 'showing') {\n            activeTrackIds.push(trackId);\n          }\n\n          const track = new chrome.cast.media.Track(\n            trackId,\n            chrome.cast.media.TrackType.TEXT\n          );\n          track.trackContentId = trackEl.src;\n          track.trackContentType = 'text/vtt';\n          track.subtype =\n            trackEl.kind === 'captions'\n              ? chrome.cast.media.TextTrackType.CAPTIONS\n              : chrome.cast.media.TextTrackType.SUBTITLES;\n          track.name = trackEl.label;\n          track.language = trackEl.srclang;\n          return track;\n        });\n      }\n\n      if (this.castStreamType === 'live') {\n        mediaInfo.streamType = chrome.cast.media.StreamType.LIVE;\n      } else {\n        mediaInfo.streamType = chrome.cast.media.StreamType.BUFFERED;\n      }\n\n      mediaInfo.metadata = new chrome.cast.media.GenericMediaMetadata();\n      mediaInfo.metadata.title = this.title;\n      mediaInfo.metadata.images = [\n        {\n          url: this.poster,\n        },\n      ];\n\n      const request = new chrome.cast.media.LoadRequest(mediaInfo);\n      request.currentTime = super.currentTime ?? 0;\n      request.autoplay = !this.#localState.paused;\n      request.activeTrackIds = activeTrackIds;\n\n      await CastableVideo.#currentSession?.loadMedia(request);\n\n      this.dispatchEvent(new Event('volumechange'));\n    }\n\n    #onRemoteMediaLoaded() {\n      this.#updateRemoteTextTrack();\n    }\n\n    async #updateRemoteTextTrack() {\n      if (!this.castPlayer) return;\n\n      // Get the tracks w/ trackId's that have been loaded; manually or via a playlist like a M3U8 or MPD.\n      const remoteTracks = this.#remotePlayer.mediaInfo?.tracks ?? [];\n      const remoteSubtitles = remoteTracks.filter(\n        ({ type }) => type === chrome.cast.media.TrackType.TEXT\n      );\n\n      const localSubtitles = [...this.textTracks].filter(\n        ({ kind }) => kind === 'subtitles' || kind === 'captions'\n      );\n\n      // Create a new array from the local subs w/ the trackId's from the remote subs.\n      const subtitles = remoteSubtitles\n        .map(({ language, name, trackId }) => {\n          // Find the corresponding local text track and assign the trackId.\n          const { mode } =\n            localSubtitles.find(\n              (local) => local.language === language && local.label === name\n            ) ?? {};\n          if (mode) return { mode, trackId };\n          return false;\n        })\n        .filter(Boolean);\n\n      const hiddenSubtitles = subtitles.filter(\n        ({ mode }) => mode !== 'showing'\n      );\n      const hiddenTrackIds = hiddenSubtitles.map(({ trackId }) => trackId);\n      const showingSubtitle = subtitles.find(({ mode }) => mode === 'showing');\n\n      // Note this could also include audio or video tracks, diff against local state.\n      const activeTrackIds =\n        CastableVideo.#currentSession?.getSessionObj().media[0]\n          ?.activeTrackIds ?? [];\n      let requestTrackIds = activeTrackIds;\n\n      if (activeTrackIds.length) {\n        // Filter out all local hidden subtitle trackId's.\n        requestTrackIds = requestTrackIds.filter(\n          (id) => !hiddenTrackIds.includes(id)\n        );\n      }\n\n      if (showingSubtitle?.trackId) {\n        requestTrackIds = [...requestTrackIds, showingSubtitle.trackId];\n      }\n\n      // Remove duplicate ids.\n      requestTrackIds = [...new Set(requestTrackIds)];\n\n      const arrayEquals = (a, b) =>\n        a.length === b.length && a.every((a) => b.includes(a));\n      if (!arrayEquals(activeTrackIds, requestTrackIds)) {\n        try {\n          const request = new chrome.cast.media.EditTracksInfoRequest(\n            requestTrackIds\n          );\n          await CastableVideo.#editTracksInfo(request);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    play() {\n      if (this.castPlayer) {\n        if (this.castPlayer.isPaused) {\n          this.castPlayer.controller?.playOrPause();\n        }\n        return;\n      }\n      return super.play();\n    }\n\n    pause() {\n      if (this.castPlayer) {\n        if (!this.castPlayer.isPaused) {\n          this.castPlayer.controller?.playOrPause();\n        }\n        return;\n      }\n      super.pause();\n    }\n\n    // Allow the cast source url to be different than <video src>, could be a blob.\n    get castSrc() {\n      // Try the first <source src> for usage with even more native markup.\n      return (\n        this.getAttribute('cast-src') ??\n        this.querySelector('source')?.src ??\n        this.currentSrc\n      );\n    }\n\n    set castSrc(val) {\n      if (this.castSrc == val) return;\n      this.setAttribute('cast-src', `${val}`);\n    }\n\n    get castContentType() {\n      return this.getAttribute('cast-content-type') ?? undefined;\n    }\n\n    set castContentType(val) {\n      this.setAttribute('cast-content-type', `${val}`);\n    }\n\n    get castStreamType() {\n      // NOTE: Per https://github.com/video-dev/media-ui-extensions/issues/3 `streamType` may yield `\"unknown\"`\n      return this.getAttribute('cast-stream-type') ?? this.streamType ?? undefined;\n    }\n\n    set castStreamType(val) {\n      this.setAttribute('cast-stream-type', `${val}`);\n    }\n\n    get readyState() {\n      if (this.castPlayer) {\n        switch (this.castPlayer.playerState) {\n          case chrome.cast.media.PlayerState.IDLE:\n            return 0;\n          case chrome.cast.media.PlayerState.BUFFERING:\n            return 2;\n          default:\n            return 3;\n        }\n      }\n      return super.readyState;\n    }\n\n    get paused() {\n      if (this.castPlayer) return this.castPlayer.isPaused;\n      return super.paused;\n    }\n\n    get muted() {\n      if (this.castPlayer) return this.castPlayer?.isMuted;\n      return super.muted;\n    }\n\n    set muted(val) {\n      if (this.castPlayer) {\n        if (\n          (val && !this.castPlayer.isMuted) ||\n          (!val && this.castPlayer.isMuted)\n        ) {\n          this.castPlayer.controller?.muteOrUnmute();\n        }\n        return;\n      }\n      super.muted = val;\n    }\n\n    get volume() {\n      if (this.castPlayer) return this.castPlayer?.volumeLevel ?? 1;\n      return super.volume;\n    }\n\n    set volume(val) {\n      if (this.castPlayer) {\n        this.castPlayer.volumeLevel = val;\n        this.castPlayer.controller?.setVolumeLevel();\n        return;\n      }\n      super.volume = val;\n    }\n\n    get duration() {\n      // castPlayer duration returns `0` when no media is loaded.\n      if (this.castPlayer && this.#isMediaLoaded) {\n        return this.castPlayer?.duration ?? NaN;\n      }\n      return super.duration;\n    }\n\n    get currentTime() {\n      if (this.castPlayer && this.#isMediaLoaded) {\n        return this.castPlayer?.currentTime ?? 0;\n      }\n      return super.currentTime;\n    }\n\n    set currentTime(val) {\n      if (this.castPlayer) {\n        this.castPlayer.currentTime = val;\n        this.castPlayer.controller?.seek();\n        return;\n      }\n      super.currentTime = val;\n    }\n\n    get onentercast() {\n      return this.#enterCastCallback;\n    }\n\n    set onentercast(callback) {\n      if (this.#enterCastCallback) {\n        this.removeEventListener('entercast', this.#enterCastCallback);\n        this.#enterCastCallback = null;\n      }\n      if (typeof callback == 'function') {\n        this.#enterCastCallback = callback;\n        this.addEventListener('entercast', callback);\n      }\n    }\n\n    get onleavecast() {\n      return this.#leaveCastCallback;\n    }\n\n    set onleavecast(callback) {\n      if (this.#leaveCastCallback) {\n        this.removeEventListener('leavecast', this.#leaveCastCallback);\n        this.#leaveCastCallback = null;\n      }\n      if (typeof callback == 'function') {\n        this.#leaveCastCallback = callback;\n        this.addEventListener('leavecast', callback);\n      }\n    }\n\n    get oncastchange() {\n      return this.#castChangeCallback;\n    }\n\n    set oncastchange(callback) {\n      if (this.#castChangeCallback) {\n        this.removeEventListener('castchange', this.#castChangeCallback);\n        this.#castChangeCallback = null;\n      }\n      if (typeof callback == 'function') {\n        this.#castChangeCallback = callback;\n        this.addEventListener('castchange', callback);\n      }\n    }\n  };\n\n// Using Object as base class for (non-polyfilled) SSR to have a minimal stub version available\nexport const CastableVideoElement = globalThis.HTMLVideoElement ? CastableVideoMixin(HTMLVideoElement) : CastableVideoMixin(Object);\n\n// Simple check to confirm env has customElements defined (aka non-polyfilled SSR)\nif (globalThis.customElements && !globalThis.customElements.get('castable-video')) {\n  customElements.define('castable-video', CastableVideoElement, {\n    extends: 'video',\n  });\n  globalThis.CastableVideoElement = CastableVideoElement;\n}\n\nCastableVideoElement.initCast();\n", "/**\n * Custom Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n  'waitingforkey',\n  'resize',\n  'enterpictureinpicture',\n  'leavepictureinpicture',\n  'webkitbeginfullscreen',\n  'webkitendfullscreen',\n  'webkitpresentationmodechanged',\n];\n\nexport const audioTemplate = globalThis.document?.createElement('template');\n\nif (audioTemplate) {\n  audioTemplate.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      audio {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\nexport const videoTemplate = globalThis.document?.createElement('template');\n\nif (videoTemplate) {\n  videoTemplate.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const CustomMediaMixin = (superclass, { tag, is }) => {\n\n  // `is` makes it possible to extend a custom built-in. e.g. castable-video\n  const nativeElTest = globalThis.document?.createElement(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n\n  return class CustomMedia extends superclass {\n    static Events = Events;\n    static template = tag.endsWith('audio') ? audioTemplate : videoTemplate;\n    static #isDefined;\n\n    static get observedAttributes() {\n      CustomMedia.#define();\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n\n      return [\n        ...natAttrs,\n        'autopictureinpicture',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'autoplay',\n        'controls',\n        'controlslist',\n        'crossorigin',\n        'loop',\n        'muted',\n        'playsinline',\n        'poster',\n        'preload',\n        'src',\n      ];\n    }\n\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n\n      const propsToAttrs = new Set(this.observedAttributes);\n      // defaultMuted maps to the muted attribute, handled manually below.\n      propsToAttrs.delete('muted');\n\n      // Passthrough native el functions from the custom el to the native el\n      for (let prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n\n        const type = typeof nativeElTest[prop];\n        if (type == 'function') {\n          // Function\n          this.prototype[prop] = function (...args) {\n            this.#init();\n\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              return this.nativeEl[prop].apply(this.nativeEl, args);\n            };\n\n            return fn();\n          };\n        } else {\n          // Some properties like src, preload, defaultMuted are handled manually.\n\n          // Getter\n          let config = {\n            get() {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === '' ? true : val;\n              }\n\n              return this.get?.(prop) ?? this.nativeEl?.[prop];\n            },\n          };\n\n          if (prop !== prop.toUpperCase()) {\n            // Setter (not a CONSTANT)\n            config.set = function (val) {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n\n              this.nativeEl[prop] = val;\n            };\n          }\n\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n\n    #isInit;\n    #nativeEl;\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n\n    get nativeEl() {\n      return this.#nativeEl\n        ?? this.shadowRoot.querySelector(tag)\n        ?? this.querySelector(tag);\n    }\n\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n\n    get src() {\n      return this.getAttribute('src');\n    }\n\n    set src(val) {\n      this.setAttribute('src', `${val}`);\n    }\n\n    get preload() {\n      return this.getAttribute('preload') ?? this.nativeEl?.preload;\n    }\n\n    set preload(val) {\n      this.setAttribute('preload', `${val}`);\n    }\n\n    #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n\n      // If there is no nativeEl by now, create it.\n      if (!this.nativeEl) {\n        const nativeEl = document.createElement(tag, { is });\n        nativeEl.part = tag;\n        this.shadowRoot.append(nativeEl);\n      }\n\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      this.nativeEl.muted = this.hasAttribute('muted');\n\n      for (let prop of nativeElProps) {\n        this.#upgradeProperty(prop);\n      }\n\n      // Keep some native child elements like track and source in sync.\n      const childMap = new Map();\n      // An unnamed <slot> will be filled with all of the custom element's\n      // top-level child nodes that do not have the slot attribute.\n      const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n      slotEl?.addEventListener('slotchange', () => {\n        const removeNativeChildren = new Map(childMap);\n        slotEl\n          .assignedElements()\n          .filter((el) => ['track', 'source'].includes(el.localName))\n          .forEach((el) => {\n            // If the source or track is still in the assigned elements keep it.\n            removeNativeChildren.delete(el);\n            // Re-use clones if possible.\n            let clone = childMap.get(el);\n            if (!clone) {\n              clone = el.cloneNode();\n              childMap.set(el, clone);\n            }\n            this.nativeEl.append?.(clone);\n          });\n        removeNativeChildren.forEach((el) => el.remove());\n      });\n\n      // The video events are dispatched on the CustomMediaElement instance.\n      // This makes it possible to add event listeners before the element is upgraded.\n      for (let type of this.constructor.Events) {\n        this.shadowRoot.addEventListener?.(type, (evt) => {\n          if (evt.target !== this.nativeEl) return;\n          this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n        }, true);\n      }\n    }\n\n    #upgradeProperty(prop) {\n      // Sets properties that are set before the custom element is upgraded.\n      // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        // Delete the set property from this instance.\n        delete this[prop];\n        // Set the value again via the (prototype) setter on this class.\n        this[prop] = value;\n      }\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      this.#init();\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n\n    #forwardAttribute(attrName, oldValue, newValue) {\n      // Ignore a few that don't need to be passed.\n      if (['id', 'class'].includes(attrName)) {\n        return;\n      }\n\n      if (newValue === null) {\n        this.nativeEl.removeAttribute?.(attrName);\n      } else {\n        this.nativeEl.setAttribute?.(attrName, newValue);\n      }\n    }\n\n    connectedCallback() {\n      this.#init();\n    }\n  };\n};\n\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (\n    let proto = Object.getPrototypeOf(nativeElTest);\n    proto && proto !== HTMLElement.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n\n  return nativeElProps;\n}\n\nexport const CustomVideoElement = globalThis.document ? CustomMediaMixin(HTMLElement, { tag: 'video' }) : class {};\n\nexport const CustomAudioElement = globalThis.document ? CustomMediaMixin(HTMLElement, { tag: 'audio' }) : class {};\n", "class TrackEvent extends Event {\n  track;\n  constructor(type, init) {\n    super(type);\n    this.track = init.track;\n  }\n}\nexport {\n  TrackEvent\n};\n", "const privateProps = /* @__PURE__ */ new WeakMap();\nfunction getPrivate(instance) {\n  return privateProps.get(instance) ?? setPrivate(instance, {});\n}\nfunction setPrivate(instance, props) {\n  let saved = privateProps.get(instance);\n  if (!saved)\n    privateProps.set(instance, saved = {});\n  return Object.assign(saved, props);\n}\nexport {\n  getPrivate,\n  setPrivate\n};\n", "import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addVideoTrack(media, track) {\n  const trackList = media.videoTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in VideoTrackList.prototype)) {\n    Object.defineProperty(VideoTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeVideoTrack(track) {\n  const trackList = getPrivate(track).media?.videoTracks;\n  if (!trackList)\n    return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction selectedChanged(selected) {\n  const trackList = getPrivate(selected).media.videoTracks ?? [];\n  let hasUnselected = false;\n  for (const track of trackList) {\n    if (track === selected)\n      continue;\n    track.selected = false;\n    hasUnselected = true;\n  }\n  if (hasUnselected) {\n    if (getPrivate(trackList).changeRequested)\n      return;\n    getPrivate(trackList).changeRequested = true;\n    queueMicrotask(() => {\n      delete getPrivate(trackList).changeRequested;\n      trackList.dispatchEvent(new Event(\"change\"));\n    });\n  }\n}\nclass VideoTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get selectedIndex() {\n    return [...this.#tracks].findIndex((track) => track.selected);\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoTrackList,\n  addVideoTrack,\n  removeVideoTrack,\n  selectedChanged\n};\n", "class RenditionEvent extends Event {\n  rendition;\n  constructor(type, init) {\n    super(type);\n    this.rendition = init.rendition;\n  }\n}\nexport {\n  RenditionEvent\n};\n", "import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.videoRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in VideoRenditionList.prototype)) {\n    Object.defineProperty(VideoRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.selected)\n      return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.selected)\n      return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested)\n    return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.selected)\n      return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.videoTracks].filter((track) => track.selected).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass VideoRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n", "import { selectedChanged } from \"./video-rendition-list.js\";\nclass VideoRendition {\n  src;\n  id;\n  width;\n  height;\n  bitrate;\n  frameRate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val)\n      return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoRendition\n};\n", "import { selectedChanged } from \"./video-track-list.js\";\nimport { VideoRendition } from \"./video-rendition.js\";\nimport { addRendition, removeRendition } from \"./video-rendition-list.js\";\nconst VideoTrackKind = {\n  alternative: \"alternative\",\n  captions: \"captions\",\n  main: \"main\",\n  sign: \"sign\",\n  subtitles: \"subtitles\",\n  commentary: \"commentary\"\n};\nclass VideoTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #selected = false;\n  addRendition(src, width, height, codec, bitrate, frameRate) {\n    const rendition = new VideoRendition();\n    rendition.src = src;\n    rendition.width = width;\n    rendition.height = height;\n    rendition.frameRate = frameRate;\n    rendition.bitrate = bitrate;\n    rendition.codec = codec;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val)\n      return;\n    this.#selected = val;\n    if (val !== true)\n      return;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoTrack,\n  VideoTrackKind\n};\n", "import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.audioRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in AudioRenditionList.prototype)) {\n    Object.defineProperty(AudioRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.enabled)\n      return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.enabled)\n      return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested)\n    return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.enabled)\n      return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.audioTracks].filter((track) => track.enabled).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass AudioRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n", "import { selectedChanged } from \"./audio-rendition-list.js\";\nclass AudioRendition {\n  src;\n  id;\n  bitrate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val)\n      return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  AudioRendition\n};\n", "import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addAudioTrack(media, track) {\n  const trackList = media.audioTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in AudioTrackList.prototype)) {\n    Object.defineProperty(AudioTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeAudioTrack(track) {\n  const trackList = getPrivate(track).media?.audioTracks;\n  if (!trackList)\n    return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction enabledChanged(track) {\n  const trackList = getPrivate(track).media.audioTracks;\n  if (!trackList || getPrivate(trackList).changeRequested)\n    return;\n  getPrivate(trackList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(trackList).changeRequested;\n    trackList.dispatchEvent(new Event(\"change\"));\n  });\n}\nclass AudioTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioTrackList,\n  addAudioTrack,\n  enabledChanged,\n  removeAudioTrack\n};\n", "import { AudioRendition } from \"./audio-rendition.js\";\nimport { enabledChanged } from \"./audio-track-list.js\";\nimport { addRendition, removeRendition } from \"./audio-rendition-list.js\";\nconst AudioTrackKind = {\n  alternative: \"alternative\",\n  descriptions: \"descriptions\",\n  main: \"main\",\n  \"main-desc\": \"main-desc\",\n  translation: \"translation\",\n  commentary: \"commentary\"\n};\nclass AudioTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #enabled = false;\n  addRendition(src, codec, bitrate) {\n    const rendition = new AudioRendition();\n    rendition.src = src;\n    rendition.codec = codec;\n    rendition.bitrate = bitrate;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get enabled() {\n    return this.#enabled;\n  }\n  set enabled(val) {\n    if (this.#enabled === val)\n      return;\n    this.#enabled = val;\n    enabledChanged(this);\n  }\n}\nexport {\n  AudioTrack,\n  AudioTrackKind\n};\n", "import { VideoTrack } from \"./video-track.js\";\nimport { VideoTrackList, addVideoTrack, removeVideoTrack } from \"./video-track-list.js\";\nimport { AudioTrack } from \"./audio-track.js\";\nimport { AudioTrackList, addAudioTrack, removeAudioTrack } from \"./audio-track-list.js\";\nimport { VideoRenditionList } from \"./video-rendition-list.js\";\nimport { AudioRenditionList } from \"./audio-rendition-list.js\";\nimport { getPrivate } from \"./utils.js\";\nconst nativeVideoTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"video\");\nconst nativeAudioTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"audio\");\nfunction MediaTracksMixin(MediaElementClass) {\n  if (!MediaElementClass?.prototype)\n    return MediaElementClass;\n  const videoTracksFn = getBaseMediaTracksFn(MediaElementClass, \"video\");\n  if (!videoTracksFn || `${videoTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoTracks\", {\n      get() {\n        return getVideoTracks(this);\n      }\n    });\n  }\n  const audioTracksFn = getBaseMediaTracksFn(MediaElementClass, \"audio\");\n  if (!audioTracksFn || `${audioTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioTracks\", {\n      get() {\n        return getAudioTracks(this);\n      }\n    });\n  }\n  if (!(\"addVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addVideoTrack = function(kind, label = \"\", language = \"\") {\n      const track = new VideoTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addVideoTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeVideoTrack = removeVideoTrack;\n  }\n  if (!(\"addAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addAudioTrack = function(kind, label = \"\", language = \"\") {\n      const track = new AudioTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addAudioTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeAudioTrack = removeAudioTrack;\n  }\n  if (!(\"videoRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoRenditions\", {\n      get() {\n        return initVideoRenditions(this);\n      }\n    });\n  }\n  const initVideoRenditions = (media) => {\n    let renditions = getPrivate(media).videoRenditions;\n    if (!renditions) {\n      renditions = new VideoRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).videoRenditions = renditions;\n    }\n    return renditions;\n  };\n  if (!(\"audioRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioRenditions\", {\n      get() {\n        return initAudioRenditions(this);\n      }\n    });\n  }\n  const initAudioRenditions = (media) => {\n    let renditions = getPrivate(media).audioRenditions;\n    if (!renditions) {\n      renditions = new AudioRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).audioRenditions = renditions;\n    }\n    return renditions;\n  };\n  return MediaElementClass;\n}\nfunction getBaseMediaTracksFn(MediaElementClass, type) {\n  if (MediaElementClass?.prototype) {\n    return Object.getOwnPropertyDescriptor(MediaElementClass.prototype, `${type}Tracks`)?.get;\n  }\n}\nfunction getVideoTracks(media) {\n  let tracks = getPrivate(media).videoTracks;\n  if (!tracks) {\n    tracks = new VideoTrackList();\n    getPrivate(media).videoTracks = tracks;\n    if (nativeVideoTracksFn) {\n      const nativeTracks = nativeVideoTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addVideoTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof VideoTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeVideoTrack(nativeTrack);\n          }\n          return;\n        }\n        addVideoTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeVideoTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nfunction getAudioTracks(media) {\n  let tracks = getPrivate(media).audioTracks;\n  if (!tracks) {\n    tracks = new AudioTrackList();\n    getPrivate(media).audioTracks = tracks;\n    if (nativeAudioTracksFn) {\n      const nativeTracks = nativeAudioTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addAudioTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof AudioTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeAudioTrack(nativeTrack);\n          }\n          return;\n        }\n        addAudioTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeAudioTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nexport {\n  MediaTracksMixin\n};\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "Attributes", "Events", "src_default", "__toCommonJS", "EventTarget", "_event", "DocumentFragment", "HTMLElement", "HTMLVideoElement", "customElements", "_name", "_constructor", "_options", "_root", "_detail", "CustomEvent", "typeArg", "eventInitDict", "__privateAdd", "__privateSet", "__privateGet", "createElement", "_tagName", "globalThisShim", "isServer", "internalGlobalThis", "internalDocument", "import_playback_core", "getEnvPlayerVersion", "player_version", "getPlayerVersion", "CastableVideoMixin", "superclass", "_a", "_castElement", "_castEnabled", "_onSdkLoaded", "_isChromeCastAvailable", "isChromeCastAvailable_get", "_isCastFrameworkAvailable", "isCastFrameworkAvailable_get", "_castContext", "castContext_get", "_currentSession", "currentSession_get", "_currentMedia", "currentMedia_get", "_editTracksInfo", "editTracksInfo_fn", "_getMediaStatus", "getMediaStatus_fn", "_setOptions", "setOptions_fn", "_localState", "_remotePlayer", "_remoteListeners", "_enterCastCallback", "_leaveCastCallback", "_castChangeCallback", "_isMediaLoaded", "isMediaLoaded_get", "_disconnect", "disconnect_fn", "_onCastStateChanged", "onCastStateChanged_fn", "_onSessionStateChanged", "onSessionStateChanged_fn", "_init", "init_fn", "_onRemoteMediaLoaded", "onRemoteMediaLoaded_fn", "_updateRemoteTextTrack", "updateRemoteTextTrack_fn", "__privateAdd", "__publicField", "__privateMethod", "__privateGet", "err", "attrName", "options", "__privateSet", "event", "listener", "_b", "mediaInfo", "subtitles", "kind", "src", "activeTrackIds", "textTrackIdCount", "trackEl", "trackId", "track", "request", "_c", "val", "callback", "resolve", "reject", "SESSION_RESUMED", "error", "value", "_d", "_e", "_f", "remoteSubtitles", "type", "localSubtitles", "language", "name", "mode", "local", "hiddenTrackIds", "showingSubtitle", "requestTrackIds", "id", "a", "b", "isAvailable", "CAST_STATE_CHANGED", "e", "video", "SESSION_STATE_CHANGED", "CastableVideoElement", "Events", "_a", "audioTemplate", "videoTemplate", "CustomMediaMixin", "superclass", "tag", "is", "_b", "_isDefined", "_define", "define_fn", "_isInit", "_nativeEl", "_init", "init_fn", "_upgradeProperty", "upgradeProperty_fn", "_forwardAttribute", "forwardAttribute_fn", "nativeElTest", "nativeElProps", "getNativeElProps", "__privateAdd", "_c", "__privateMethod", "__privateGet", "val", "__privateSet", "attrName", "oldValue", "newValue", "propsToAttrs", "prop", "args", "config", "attr", "nativeEl", "childMap", "slotEl", "removeNativeChildren", "el", "clone", "type", "evt", "value", "_d", "__publicField", "proto", "CustomVideoElement", "CustomAudioElement", "TrackEvent", "type", "init", "__publicField", "privateProps", "getPrivate", "instance", "_a", "setPrivate", "props", "saved", "addVideoTrack", "media", "track", "trackList", "getPrivate", "trackSet", "index", "VideoTrackList", "TrackEvent", "removeVideoTrack", "_a", "selectedChanged", "selected", "hasUnselected", "_addTrackCallback", "_removeTrackCallback", "_changeCallback", "_tracks", "tracks_get", "__privateAdd", "__privateGet", "id", "callback", "__privateSet", "RenditionEvent", "type", "init", "__publicField", "addRendition", "track", "rendition", "renditionList", "getPrivate", "renditionSet", "index", "VideoRenditionList", "getCurrentRenditions", "RenditionEvent", "removeRendition", "selectedChanged", "_addRenditionCallback", "_removeRenditionCallback", "_changeCallback", "__privateAdd", "id", "_a", "i", "__privateGet", "callback", "__privateSet", "_selected", "VideoRendition", "__publicField", "__privateAdd", "__privateGet", "val", "__privateSet", "selectedChanged", "_selected", "VideoTrack", "__publicField", "__privateAdd", "src", "width", "height", "codec", "bitrate", "frameRate", "rendition", "VideoRendition", "addRendition", "removeRendition", "__privateGet", "val", "__privateSet", "selectedChanged", "addRendition", "track", "rendition", "renditionList", "getPrivate", "renditionSet", "index", "AudioRenditionList", "getCurrentRenditions", "RenditionEvent", "removeRendition", "selectedChanged", "_addRenditionCallback", "_removeRenditionCallback", "_changeCallback", "__privateAdd", "id", "_a", "i", "__privateGet", "callback", "__privateSet", "_selected", "AudioRendition", "__publicField", "__privateAdd", "__privateGet", "val", "__privateSet", "selectedChanged", "addAudioTrack", "media", "track", "trackList", "getPrivate", "trackSet", "index", "AudioTrackList", "TrackEvent", "removeAudioTrack", "_a", "enabledChanged", "_addTrackCallback", "_removeTrackCallback", "_changeCallback", "_tracks", "tracks_get", "__privateAdd", "__privateGet", "id", "callback", "__privateSet", "_enabled", "AudioTrack", "__publicField", "__privateAdd", "src", "codec", "bitrate", "rendition", "AudioRendition", "addRendition", "removeRendition", "__privateGet", "val", "__privateSet", "enabledChanged", "nativeVideoTracksFn", "getBaseMediaTracksFn", "nativeAudioTracksFn", "MediaTracksMixin", "MediaElementClass", "videoTracksFn", "getVideoTracks", "audioTracksFn", "getAudioTracks", "kind", "label", "language", "track", "VideoTrack", "addVideoTrack", "removeVideoTrack", "AudioTrack", "addAudioTrack", "removeAudioTrack", "initVideoRenditions", "media", "renditions", "getPrivate", "VideoRenditionList", "initAudioRenditions", "AudioRenditionList", "type", "_a", "tracks", "VideoTrackList", "nativeTracks", "nativeTrack", "event", "t", "AudioTrackList", "Events", "CustomVideoElement", "MediaTracksMixin", "CustomMediaMixin", "internalGlobalThis", "Attributes", "AttributeNameValues", "playerSoftwareVersion", "getPlayerVersion", "playerSoftwareName", "_core", "_loadRequested", "_playerInitTime", "_metadata", "_playerSoftwareVersion", "_playerSoftwareName", "_errorTranslator", "_requestLoad", "requestLoad_fn", "MuxVideoElement", "__privateAdd", "__privateSet", "_a", "value", "__privateGet", "val", "attr", "currentVal", "num", "_b", "liveEdgeOffset", "seekableEnd", "seekableStart", "cuePoints", "attrName", "currAttrs", "oldValue", "newValue", "hadSrc", "hasSrc", "__privateMethod", "debug", "resp", "json", "src_default", "MuxVideoElement"]
}
